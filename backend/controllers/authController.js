import db from '../config/database.js';

// =========================================
// REGISTER - ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
// =========================================
export const register = (req, res) => {
  console.log('üì• Received registration request:', req.body);
  
  const { 
    username, 
    password, 
    cust_fname, 
    cust_lname, 
    cust_tel, 
    cust_address 
  } = req.body;
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  if (!username || !password || !cust_fname || !cust_lname) {
    console.log('‚ùå Missing required fields');
    return res.status(400).json({ 
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô, ‡∏ä‡∏∑‡πà‡∏≠, ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•)',
      required: ['username', 'password', 'cust_fname', 'cust_lname']
    });
  }

  // Validate username length
  if (username.length < 4) {
    console.log('‚ùå Username too short');
    return res.status(400).json({ 
      message: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 4 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£' 
    });
  }

  // Validate password length
  if (password.length < 6) {
    console.log('‚ùå Password too short');
    return res.status(400).json({ 
      message: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£' 
    });
  }

  // Validate phone format if provided
  if (cust_tel) {
    const phoneRegex = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/;
    if (!phoneRegex.test(cust_tel)) {
      console.log('‚ùå Invalid phone format');
      return res.status(400).json({ 
        message: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 081-234-5678)' 
      });
    }
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ username ‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const checkSql = 'SELECT cust_ID FROM customer WHERE cust_username = ?';
  
  db.query(checkSql, [username], (err, result) => {
    if (err) {
      console.error('‚ùå Database Error (Check):', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }
    
    if (result.length > 0) {
      console.log('‚ö†Ô∏è Username already exists:', username);
      return res.status(400).json({ 
        message: 'Username ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏∑‡πà‡∏ô' 
      });
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á database
    const insertSql = `
      INSERT INTO customer 
      (cust_fname, cust_lname, cust_tel, cust_address, cust_username, cust_password) 
      VALUES (?, ?, ?, ?, ?, ?)
    `;
    
    const values = [
      cust_fname, 
      cust_lname, 
      cust_tel || null, 
      cust_address || null, 
      username, 
      password
    ];
    
    db.query(insertSql, values, (err, result) => {
      if (err) {
        console.error('‚ùå Insert Error:', err);
        return res.status(500).json({ 
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
          error: process.env.NODE_ENV === 'development' ? err.message : undefined
        });
      }
      
      console.log('‚úÖ Customer registered successfully:', username);
      console.log('üìù Customer ID:', result.insertId);
      
      res.status(201).json({ 
        success: true,
        message: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
        customer: {
          id: result.insertId,
          username: username,
          firstName: cust_fname,
          lastName: cust_lname,
          fullName: `${cust_fname} ${cust_lname}`,
          phone: cust_tel || null,
          address: cust_address || null
        }
      });
    });
  });
};

// =========================================
// LOGIN - ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
// =========================================
export const login = (req, res) => {
  console.log('');
  console.log('üì• ========== LOGIN REQUEST ==========');
  console.log('Request body:', { username: req.body.username, password: '***' });
  
  const { username, password } = req.body;
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!username || !password) {
    console.log('‚ùå Missing username or password');
    return res.status(400).json({ 
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å username ‡πÅ‡∏•‡∏∞ password',
      required: ['username', 'password']
    });
  }

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ customer
  const sql = `
    SELECT 
      cust_ID,
      cust_fname,
      cust_lname,
      cust_tel,
      cust_address,
      cust_username,
      cust_password,
      created_at
    FROM customer 
    WHERE cust_username = ?
  `;
  
  console.log('üîç Searching for customer:', username);
  
  db.query(sql, [username], (err, result) => {
    if (err) {
      console.error('‚ùå Database Error:', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }
    
    console.log('üìä Query result length:', result.length);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ customer ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (result.length === 0) {
      console.log('‚ö†Ô∏è Customer not found:', username);
      return res.status(401).json({ 
        message: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
      });
    }

    const customer = result[0];
    console.log('üë§ Customer found:', customer.cust_username);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    if (customer.cust_password !== password) {
      console.log('‚ö†Ô∏è Wrong password for user:', username);
      return res.status(401).json({ 
        message: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
      });
    }

    // Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    console.log('‚úÖ Login successful!');
    console.log('======================================');
    console.log('');
    
    res.json({ 
      success: true,
      message: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
      customer: {
        id: customer.cust_ID,
        username: customer.cust_username,
        firstName: customer.cust_fname,
        lastName: customer.cust_lname,
        fullName: `${customer.cust_fname} ${customer.cust_lname}`,
        phone: customer.cust_tel,
        address: customer.cust_address,
        memberSince: customer.created_at
      }
    });
  });
};

// =========================================
// GET PROFILE - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
// =========================================
export const getProfile = (req, res) => {
  console.log('üì• Get Profile Request');
  
  const customerId = req.params.id;
  
  // Validate customer ID
  if (!customerId || isNaN(customerId)) {
    return res.status(400).json({ 
      message: 'Customer ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
    });
  }
  
  const sql = `
    SELECT 
      cust_ID,
      cust_fname,
      cust_lname,
      cust_tel,
      cust_address,
      cust_username,
      created_at,
      updated_at
    FROM customer 
    WHERE cust_ID = ?
  `;
  
  db.query(sql, [customerId], (err, result) => {
    if (err) {
      console.error('‚ùå Database Error:', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }
    
    if (result.length === 0) {
      console.log('‚ö†Ô∏è Customer not found with ID:', customerId);
      return res.status(404).json({ 
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' 
      });
    }

    const customer = result[0];
    
    console.log('‚úÖ Profile retrieved for:', customer.cust_username);
    
    res.json({
      success: true,
      customer: {
        id: customer.cust_ID,
        username: customer.cust_username,
        firstName: customer.cust_fname,
        lastName: customer.cust_lname,
        fullName: `${customer.cust_fname} ${customer.cust_lname}`,
        phone: customer.cust_tel,
        address: customer.cust_address,
        createdAt: customer.created_at,
        updatedAt: customer.updated_at
      }
    });
  });
};

// =========================================
// UPDATE PROFILE - ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
// =========================================
export const updateProfile = (req, res) => {
  console.log('üì• Update Profile Request');
  console.log('Customer ID:', req.params.id);
  console.log('Update data:', req.body);
  
  const customerId = req.params.id;
  const { cust_fname, cust_lname, cust_tel, cust_address } = req.body;
  
  // Validate customer ID
  if (!customerId || isNaN(customerId)) {
    return res.status(400).json({ 
      message: 'Customer ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
    });
  }

  // Validate required fields
  if (!cust_fname || !cust_lname) {
    return res.status(400).json({ 
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•',
      required: ['cust_fname', 'cust_lname']
    });
  }

  // Validate phone format if provided
  if (cust_tel) {
    const phoneRegex = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/;
    if (!phoneRegex.test(cust_tel)) {
      return res.status(400).json({ 
        message: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 081-234-5678)' 
      });
    }
  }
  
  const sql = `
    UPDATE customer 
    SET 
      cust_fname = ?,
      cust_lname = ?,
      cust_tel = ?,
      cust_address = ?,
      updated_at = CURRENT_TIMESTAMP
    WHERE cust_ID = ?
  `;
  
  const values = [
    cust_fname, 
    cust_lname, 
    cust_tel || null, 
    cust_address || null, 
    customerId
  ];
  
  db.query(sql, values, (err, result) => {
    if (err) {
      console.error('‚ùå Update Error:', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }
    
    if (result.affectedRows === 0) {
      console.log('‚ö†Ô∏è No customer found with ID:', customerId);
      return res.status(404).json({ 
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' 
      });
    }
    
    console.log('‚úÖ Profile updated successfully for customer ID:', customerId);
    
    res.json({ 
      success: true,
      message: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
      customer: {
        id: parseInt(customerId),
        firstName: cust_fname,
        lastName: cust_lname,
        fullName: `${cust_fname} ${cust_lname}`,
        phone: cust_tel || null,
        address: cust_address || null
      }
    });
  });
};

// =========================================
// DELETE ACCOUNT - ‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)
// =========================================
export const deleteAccount = (req, res) => {
  console.log('üì• Delete Account Request');
  
  const customerId = req.params.id;
  const { password } = req.body;
  
  // Validate inputs
  if (!customerId || isNaN(customerId)) {
    return res.status(400).json({ 
      message: 'Customer ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
    });
  }

  if (!password) {
    return res.status(400).json({ 
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
      required: ['password']
    });
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
  const checkSql = 'SELECT cust_password FROM customer WHERE cust_ID = ?';
  
  db.query(checkSql, [customerId], (err, result) => {
    if (err) {
      console.error('‚ùå Database Error:', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }

    if (result.length === 0) {
      return res.status(404).json({ 
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' 
      });
    }

    if (result[0].cust_password !== password) {
      return res.status(401).json({ 
        message: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
      });
    }

    // ‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
    const deleteSql = 'DELETE FROM customer WHERE cust_ID = ?';
    
    db.query(deleteSql, [customerId], (err, result) => {
      if (err) {
        console.error('‚ùå Delete Error:', err);
        return res.status(500).json({ 
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
          error: process.env.NODE_ENV === 'development' ? err.message : undefined
        });
      }

      console.log('‚úÖ Account deleted successfully');

      res.json({
        success: true,
        message: '‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
      });
    });
  });
};

// =========================================
// CHANGE PASSWORD - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)
// =========================================
export const changePassword = (req, res) => {
  console.log('üì• Change Password Request');
  
  const customerId = req.params.id;
  const { oldPassword, newPassword } = req.body;
  
  // Validate inputs
  if (!customerId || isNaN(customerId)) {
    return res.status(400).json({ 
      message: 'Customer ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
    });
  }

  if (!oldPassword || !newPassword) {
    return res.status(400).json({ 
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
      required: ['oldPassword', 'newPassword']
    });
  }

  if (newPassword.length < 6) {
    return res.status(400).json({ 
      message: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£' 
    });
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°
  const checkSql = 'SELECT cust_password FROM customer WHERE cust_ID = ?';
  
  db.query(checkSql, [customerId], (err, result) => {
    if (err) {
      console.error('‚ùå Database Error:', err);
      return res.status(500).json({ 
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        error: process.env.NODE_ENV === 'development' ? err.message : undefined
      });
    }

    if (result.length === 0) {
      return res.status(404).json({ 
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' 
      });
    }

    if (result[0].cust_password !== oldPassword) {
      return res.status(401).json({ 
        message: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
      });
    }

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
    const updateSql = 'UPDATE customer SET cust_password = ? WHERE cust_ID = ?';
    
    db.query(updateSql, [newPassword, customerId], (err, result) => {
      if (err) {
        console.error('‚ùå Update Error:', err);
        return res.status(500).json({ 
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
          error: process.env.NODE_ENV === 'development' ? err.message : undefined
        });
      }

      console.log('‚úÖ Password changed successfully');

      res.json({
        success: true,
        message: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
      });
    });
  });
};